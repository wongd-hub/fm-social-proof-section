import React, { useState, useEffect } from 'react'
import Head from 'next/head'
import Image from 'next/image'
// import styles from '../styles/Home.module.css'

import ReviewStarBox from '../components/ReviewStarBox'
import TestimonialBox from '../components/TestimonialBox'
import Notification from '../components/Notification'

import coltonS from '../static/images/image-colton.jpg'
import ireneR from '../static/images/image-irene.jpg'
import anneW from '../static/images/image-anne.jpg'

const reviews = [
  'Rated 5 Stars in Reviews',
  'Rated 5 Stars in Report Guru',
  'Rated 5 Stars in BestTech'
]

const testimonials = [
  {
    author: 'Colton Smith',
    testimonial: '"We needed the same printed design as the one we had ordered a week prior. \
    Not only did they find the original order, but we also received it in time. \
    Excellent!"',
    src: coltonS
  },
  {
    author: 'Irene Roberts',
    testimonial: '"Customer service is always excellent and very quick turn around. Completely \
    delighted with the simplicity of the purchase and the speed of delivery."',
    src: ireneR
  },
  {
    author: 'Anne Wallace',
    testimonial: '"Put an order with this company and can only praise them for the very high \
    standard. Will definitely use them again and recommend them to everyone!"',
    src: anneW
  },
]

export default function Home() {

  const [vsize, setVSize] = useState([0, 0]) // State used to track viewport size
  const [unsupported, setUnsupp] = useState(undefined)

  // Listen for window resize
  useEffect(() => {
    setVSize([window.innerWidth, window.innerHeight])
    window.addEventListener('resize', () => {
      setVSize([window.innerWidth, window.innerHeight])
    });
    return () => window.removeEventListener('resize', () => setVSize([window.innerWidth, window.innerHeight]));
  }, []);

    // Change state if window is certain size
  useEffect(() => {
    if (vsize[0] >= 1440 || vsize[0] <= 375) {
      setUnsupp(false)
    } else {
      setUnsupp(true)
    }
  }, [vsize]);

  return (
    <div className="container">
      <Head>
        <title>Frontend Mentor | Social proof section</title>
        <meta name="description" content="Generated by create next app" />
        <meta charset="UTF-8" />
        <meta name="viewport" content="width=device-width, initial-scale=1.0" />
        <link rel="icon" type="image/png" sizes="32x32" href="./images/favicon-32x32.png"
        />
      </Head>
      <Notification isDisplayed={unsupported} />
      <main>
        <div className="grid-container">
          <div className="top-section">
            <div className="spiel">
              <h1 className="spiel__title">
                10,000+ of our users love our products.
              </h1>
              <p className="spiel__summary">
                We only provide great products combined with excellent customer service.
                See what our satisfied customers are saying about our services.
              </p>
            </div>
            <div className="reviews">
              <div className="reviews__box">
                {
                  reviews.map((el, i) => (
                        <ReviewStarBox stars={5} text={el} key={`${el}${i}`}/>
                    )
                  )
                }
              </div>
            </div>
          </div>
          <div className="bottom-section">
                {
                  testimonials.map((el, i) => (
                    <TestimonialBox 
                      imgSrc={el.src}
                      author={el.author}
                      testimonial={el.testimonial}
                      key={i}
                    />
                  ))
                }
          </div>
        </div>
      </main>

      
    </div>
  )
}
